openapi: 3.0.3

info:
  title: ITcom trainings API
  version: 0.0.1
  contact:
    name: Matteo Carbone
    email: email@matteocarbone.com
    url: https://matteocarbone.com

servers:
  - url: https://api.itcom-trainings.link/{environment}
    variables:
      environment:
        enum: [dev, prod]
        default: dev
        description: The API stage

externalDocs:
  description: Models documentation
  url: https://github.com/uatisdeproblem/itcom-trainings/tree/main/back-end/src/models

tags:
  - name: Communications
    description: The platform's communications

paths:
  /communications:
    get:
      summary: Get the communications
      tags: [Communications]
      parameters:
        - name: year
          in: query
          description: Get the communications of this year; if not specified, only unarchived ones are returned
          schema:
            type: number
      responses:
        200:
          $ref: '#/components/responses/Communications'
    post:
      summary: Insert a new communication
      tags: [Communications]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Communication'
      responses:
        200:
          $ref: '#/components/responses/Communication'
        400:
          $ref: '#/components/responses/BadParameters'
  /communications/{communicationId}:
    get:
      summary: Get a communication
      tags: [Communications]
      parameters:
        - name: communicationId
          in: path
          description: Communication ID
          required: true
          schema:
            type: string
      responses:
        200:
          $ref: '#/components/responses/Communication'
    put:
      summary: Edit a communication
      tags: [Communications]
      parameters:
        - name: communicationId
          in: path
          description: Communication ID
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Communication'
      responses:
        200:
          $ref: '#/components/responses/Communication'
        400:
          $ref: '#/components/responses/BadParameters'
    delete:
      summary: Delete a communication
      tags: [Communications]
      parameters:
        - name: communicationId
          in: path
          description: Communication ID
          required: true
          schema:
            type: string
      responses:
        200:
          $ref: '#/components/responses/OperationCompleted'
        400:
          $ref: '#/components/responses/BadParameters'

components:
  schemas:
    Communication:
      type: object
      additionalProperties: {}

  responses:
    Communication:
      description: A communication
      content:
        application/json:
          schema:
            type: object
            $ref: '#/components/schemas/Communication'
    Communications:
      description: The communications
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/Communication'
    BadParameters:
      description: Bad input parameters
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
                example: The request isn't valid
    OperationCompleted:
      description: Operation completed
